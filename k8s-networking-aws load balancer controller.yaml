# 1. Determine whether you have an existing IAM OIDC provider for your cluster.
aws eks describe-cluster --name <cluster_name> --query "cluster.identity.oidc.issuer" --output text
# List the IAM OIDC providers in your account. 
region=$(aws eks describe-cluster --name tf-eks-vCzQkZzs --query "cluster.identity.oidc.issuer" --output text|cut -d '.' -f 3)
oicd=$(aws eks describe-cluster --name tf-eks-vCzQkZzs --query "cluster.identity.oidc.issuer" --output text|cut -d '/' -f 5)
aws iam list-open-id-connect-providers | grep $oicd

# 2. Download an IAM policy for the AWS Load Balancer Controller that allows it to make calls to AWS APIs on your behalf.
curl -o iam-policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.2.0/docs/install/iam_policy.json

# 3. Create an IAM policy using the policy downloaded in the previous step.
aws iam create-policy \
    --policy-name AWSLoadBalancerControllerIAMPolicy \
    --policy-document file://iam_policy.json

# 4. Create an IAM role and annotate the Kubernetes service account named aws-load-balancer-controller in the kube-system namespace
eksctl create iamserviceaccount \
  --cluster=<my-cluster> \
  --namespace=kube-system \
  --name=aws-load-balancer-controller \
  --attach-policy-arn=arn:aws:iam::<AWS_ACCOUNT_ID>:policy/AWSLoadBalancerControllerIAMPolicy \
  --override-existing-serviceaccounts \
  --approve

# 5. Check to see if the controller is currently installed
kubectl get deployment -n kube-system alb-ingress-controller

# 6. Install the AWS Load Balancer Controller using Helm V3 or later
# Install the TargetGroupBinding custom resource definitions.
kubectl apply -k "github.com/aws/eks-charts/stable/aws-load-balancer-controller//crds?ref=master"
helm repo add eks https://aws.github.io/eks-charts
helm upgrade -i aws-load-balancer-controller eks/aws-load-balancer-controller \
  --set clusterName=<cluster-name> \
  --set serviceAccount.create=false \
  --set serviceAccount.name=aws-load-balancer-controller \
  -n kube-system

# 7. Verify that the controller is installed.
kubectl get deployment -n kube-system aws-load-balancer-controller
